version: '3'
services:
  listings_service:
    build: ./listings_service
    ports:
      - "5001:5000"
    environment:
      FLASK_APP: app.py
      AWS_ACCESS_KEY_ID: ${AWS_ACCESS_KEY_ID}
      AWS_SECRET_ACCESS_KEY: ${AWS_SECRET_ACCESS_KEY}
      AWS_S3_LISTINGS_BUCKET_NAME: ${AWS_S3_LISTINGS_BUCKET_NAME}
      AWS_DB_LISTINGS_TABLE_NAME: ${AWS_DB_LISTINGS_TABLE_NAME}
      AWS_S3_REGION: ${AWS_S3_REGION}
      JWT_SECRET_KEY: ${JWT_SECRET_KEY}
    command: flask run --host=0.0.0.0 --port=5000

  ratings_service:
    build: ./rating_service
    ports:
      - "5002:5000"
    environment:
      FLASK_APP: app.py
      JWT_SECRET_KEY: ${JWT_SECRET_KEY}
    command: flask run --host=0.0.0.0 --port=5000

  search_engine:
    build: ./search_engine
    ports:
      - "5003:5000"
    environment:
      FLASK_APP: app.py
      JWT_SECRET_KEY: ${JWT_SECRET_KEY}
    command: flask run --host=0.0.0.0 --port=5000

  recommendations_service:
    build: ./recommendations_service
    ports:
      - "5004:5000"
    environment:
      FLASK_APP: app.py
      JWT_SECRET_KEY: ${JWT_SECRET_KEY}
    command: flask run --host=0.0.0.0 --port=5000

  user_profile_service:
    build: ./user_profile_service
    ports:
      - "5005:5000"
    environment:
      FLASK_APP: app.py
      FLASK_ENV: development
      AWS_ACCESS_KEY_ID: ${AWS_ACCESS_KEY_ID}
      AWS_SECRET_ACCESS_KEY: ${AWS_SECRET_ACCESS_KEY}
      AWS_S3_USERS_BUCKET_NAME: ${AWS_S3_USERS_BUCKET_NAME}
      AWS_DB_USERS_TABLE_NAME: ${AWS_DB_USERS_TABLE_NAME}
      AWS_S3_REGION: ${AWS_S3_REGION}
      JWT_SECRET_KEY: ${JWT_SECRET_KEY}
      SECRET_KEY: ${JWT_SECRET_KEY}
      SMTP_SERVER: ${SMTP_SERVER}
      SMTP_PORT: ${SMTP_PORT}
      SMTP_USERNAME: ${SMTP_USERNAME}
      SMTP_PASSWORD: ${SMTP_PASSWORD}
      SENDER_EMAIL: ${SENDER_EMAIL}

    command: flask run --host=0.0.0.0 --port=5000

  authentication_service:
    build: ./authentication_service
    ports:
      - "5006:5000"
    environment:
      FLASK_APP: app.py
      JWT_SECRET_KEY: ${JWT_SECRET_KEY}
    command: flask run --host=0.0.0.0 --port=5000
  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch:7.17.10 
    container_name: elasticsearch
    environment:
      - discovery.type=single-node 
      - ES_JAVA_OPTS=-Xms512m -Xmx512m  
    ports:
      - "9200:9200"  
    volumes:
      - es_data:/usr/share/elasticsearch/data  
    networks:
      - app-network 

volumes:
  es_data: {} 

networks:
  app-network:
    driver: bridge
